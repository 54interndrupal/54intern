<?php

function intern_user_block_info() {
  $blocks['user share status'] = array(
    'info' => t('Intern User -- 分享我的最新动态')
  );
  $blocks['user center showcase'] = array(
    'info' => t('Intern User -- 个人中心Showcase')
  );
  $blocks['user top link'] = array(
    'info' => t('Intern User -- 用户顶部链接'),
    'cache' => DRUPAL_NO_CACHE
  );
  $blocks['user resume status'] = array(
    'info' => t('Intern User -- 简历完整度'),
    'cache' => DRUPAL_NO_CACHE
  );
  $blocks['company user info'] = array(
    'info' => t('Intern User -- 企业用户信息'),
    'cache' => DRUPAL_NO_CACHE
  );
  return $blocks;
}

function intern_company_user_login_form() {
  $form = array();
  $form['company_name'] = array(
    '#type' => 'textfield',
    '#title' => t('企业名称'),
    '#required' => 1,
  );
  $form['name'] = array(
    '#type' => 'textfield',
    '#title' => t('用户名'),
    '#required' => 1,
  );
  $form['name']['#element_validate'][] = 'userreg_user_login_validate';
  $form['pass'] = array(
    '#type' => 'password',
    '#title' => t('密码'),
    '#required' => 1,
  );

  $form['remember_me'] = array(
    '#type' => 'checkbox',
    '#title' => t('记住我'),
  );

  $form['actions'] = array('#type' => 'actions');
  $form['actions']['submit'] = array('#type' => 'submit', '#value' => t('Log in'));
  $form['#validate'] = shixiquan_login_default_validators();
//  $form['#validate'] = user_login_default_validators();
  $form['#submit'][] = 'user_login_submit';
  $form['#submit']['#value'] =  t('Log in');
  return $form;
}

/**
 * 实现钩子hook_block_view().
 */
function intern_user_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'user share status':
      $block['subject'] = t('分享我的最新动态');
      $block['content'] = intern_user_share_status_block();
      break;
    case 'user center showcase':
      $block['subject'] = t('个人中心showcase');
      $block['content'] = intern_user_center_showcase_block();
      break;
    case 'user resume tabs':
      $block['subject'] = '';
      $block['content'] = intern_user_resume_tabs_block();
      break;
    case 'user top link':
      $block['subject'] = '';
      $block['content'] = intern_user_top_link_block();
      break;
    case 'user resume status':
      $path = 'node/add/resume';
      if (!empty($_SESSION['user_resume_id'])) {
        $path = 'node/' . $_SESSION['user_resume_id'] . '/edit/preview';
      }
      $block['subject'] = '<a href="'.url($path).'">我的简历</a>';
      $block['content'] = intern_user_resume_status_block();
      break;
    case 'company user info':
      $block['subject'] = '欢迎访问实习圈';
      $block['content'] = intern_user_company_user_info_block();
      break;

  }
  return $block;
}

/**
 * 分享我的最新动态 Block
 */
function intern_user_share_status_block() {
  $output = '<div id="userShareStatus"></div>';
  $output .= '<script type="text/javascript">';
  $output .= '(function ($) {';
  $output .= '$(document).ready(function () { ';
  $output .= '$(".view-id-statuses_stream").prependTo($("#userShareStatus"));';
  $output .= '$("#main").addClass("refreshed");';
  $output .= '});';
  $output .= '})(jQuery)';
  $output .= '</script>';
  return $output;
}

/**
 * 企业用户信息区块
 */
function intern_user_company_user_info_block() {
  if (intern_user_is_company_user()) {
    drupal_add_js(drupal_get_path('module', 'intern_user') . '/js/intern_company_user.js', array('preprocess' => FALSE));
  }
  return '&nbsp;';
}

/**
 * 用户简历完整度 Block
 */
function intern_user_resume_status_block() {
  global $user, $is_page_authcache;
  if ($user->uid > 0) {
    $path = 'node/add/resume';
    if (!empty($_SESSION['user_resume_id'])) {
      $path = 'node/' . $_SESSION['user_resume_id'] . '/edit/preview';
    }
    $output = '<div class="block" id="resume-block">';
    $output .= '<h2 class="block-title"><a href="'.url($path).'">我的简历</a></h2>';
    $output .= '<div class="block-content"><div class="resume-status">';
    $output .= '</div></div></div>';
    // Use JS to retrieve block content
    drupal_add_js(drupal_get_path('module', 'intern_user') . '/js/intern_user.js', array('preprocess' => FALSE));
  }
  return $output;
}

function intern_user_get_resume_finish_percent($resume) {

  $i = 0;
  $j = 0;
  $instances = field_info_instances('node', 'resume');

  foreach ($instances as $name => $instance) {
    if ($instance["display"]["default"]["type"] != 'hidden') {
      $field = field_get_items('node', $resume, $instance['field_name']);
      $j++;
      if ($field) {
        $i++;
      }
    }
  }

  $percent = round(($i / $j) * 100);
  return $percent;
}

function intern_user_resume_status_block_view() {

  global $user;
  global $base_url;
  $output = '';
  $percent = 0;

  if ($user->uid > 0) {
    $path = 'node/add/resume';
    if (!empty($_SESSION['user_resume_id'])) {
      $path = 'node/' . $_SESSION['user_resume_id'] . '/edit';
      if (empty($_SESSION['user_resume_finish_percent'])) {
        $resume = node_load($_SESSION['user_resume_id']);
        $percent = intern_user_get_resume_finish_percent($resume);
        $_SESSION['user_resume_finish_percent'] = $percent;
      }
      else {
        $percent = $_SESSION['user_resume_finish_percent'];
      }

    }

    $output .= '<p>完整度：<big>' . $percent . '%</big></p>';
    $output .= '<div class="status"><div style="width:' . $percent . '%;"></div></div>';
    $output .= '<a href="' . url($path) . '"><span class="form-submit">继续完善简历</span></a>';

  }
  return $output;
}


/**
 * @个人中心——showcase
 */
function intern_user_center_showcase_block() {
  global $base_url;
  $output = '
    <div class="company-center-showcase"><img src="' . $base_url . '/' . drupal_get_path('theme', 'ffintern') . '/css/img/site/showcase-user-center.gif"></div>
  ';
  return $output;
}

/**
 *
 * 个人简历编辑 tabs block
 */
function intern_user_resume_tabs_block() {
  $preview = false;
  if (arg(3) == 'preview') {
    $preview = TRUE;
  }
  ;
  $output = "";
  $output .= '<ul class="quicktabs-tabs quicktabs-style-intern">';
  if ($preview==true){
    $path = 'node/' . $_SESSION['user_resume_id'] . '/edit';
    $output .= '<div class="more-link" style="float: right;margin-top:0px;"><a href="'. url($path).'">更新简历>></a></div>';
    $output .= '<li class="active" id="user-basic-info-tab"><a href="#">简历预览</a></li>';
  }else{
    $output .= '<li class="active" id="user-basic-info-tab"><a href="#">个人基本资料</a></li>';
    $output .= '<li id="user-attached-resume-tab"><a href="#">上传简历</a></li>';
    $output .= '<li id="user-apply-letter-tab"><a href="#">求职信</a></li>';
  }
  $output .= '</ul>';
  return $output;
}

/**
 * 用户顶部链接
 */
function intern_user_top_link_block() {
  global $user,$is_page_authcache;
  $output = '<div id="top-toolbar" class="block">
           <div class="block-content">';
  if (!$user->uid) {
    $output .= '<span>欢迎 <a href="' . url("ajax_register/register/nojs") . '" class="ctools-use-modal ctools-modal-ctools-ajax-register-style">注册</a> 或 <a href="' . url("ajax_register/login/nojs") . '" class="ctools-use-modal ctools-modal-ctools-ajax-register-style" title="登录">登陆</a> 实习圈 或</span> <br>
              <span><a href="' . base_path() . 'csna/weibo" class="WB" title="新浪微博账号登陆"></a><a href="' . url("csna/qq") . '" class="QQ" title="QQ账号登陆"></a><a href="' . url("csna/renren") . '" class="RR" title="人人账号登陆"></a></span>';
  }
  else {
    $userName = '<a class="authcache-user-link">!username</a>';
    if ($user->uid && $is_page_authcache == false){
      $userName  =intern_user_get_user_full_name($user->name);
    }
    $output .= '<span>Hi,&nbsp;' . $userName . '&nbsp; 实习圈欢迎你！</span><br>
              <span><a  href="' . url("user") . '" class="channel-login" name="user-login" title="个人帐户管理" >我的帐户</a> |
	          <a  href="' . url("user/logout") . '" class="channel-login" name="user-login" title="退出登录" >注销登录</a></span>';
  }
  $output .= '  </div>
           </div>';

  if (user_is_anonymous()) {
    _ajax_register_include_modal();
  }
  return $output;
}

/**
 * 判断是否为企业用户
 */
function intern_user_is_company_user() {
  Global $user;
  if (in_array(4, array_keys($user->roles))) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

function intern_user_is_editor_user() {
  Global $user;
  if (in_array(6, array_keys($user->roles))) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

function intern_user_is_scraper_user($uid) {
  if ($uid == '9') {
    return TRUE;
  }
  return FALSE;
}

/** 获取用户对应的company nid */
function intern_user_get_company_id($uid) {
  $company_id = db_select('node', 'n')
    ->condition('n.uid', $uid)
    ->condition('n.type', 'company')
    ->fields('n', array('nid'))
    ->range(0, 1)
    ->execute()
    ->fetchField();
  return $company_id;
}


function intern_user_get_age($dob) {
  if (!empty($dob)) {
    $now = time();
    $then = strtotime($dob);
    $diff = date('Y', $now) - date('Y', $then);
    if ($diff <= 0) {
      return;
    }
    if (($diff > 0) && (date('z', $now) < date('z', $then))) {
      $diff--;
    }
    return $diff;
  }

  return "";
}

function intern_user_form_node_form_alter(&$form, $form_state) {
  $type = $form['#node']->type;
  Global $user;

  if ($type == 'resume' && user_is_logged_in()) {
    $field_real_name_default_value = $form['field_real_name']['und'][0]['value']['#default_value'];
    $field_email_default_value = $form['field_email']['und'][0]['value']['#default_value'];
    if (empty($field_real_name_default_value) || empty($field_email_default_value)) {
      $user = user_load($user->uid);
      if (empty($field_real_name_default_value)) {
        $form['field_real_name']['und'][0]['value']['#default_value'] = $user->field_real_name['und'][0]['safe_value'];
      }
      if (empty($field_email_default_value)) {
        $form['field_email']['und'][0]['value']['#default_value'] = $user->mail;
      }
    }

    if (empty($form['title']['#default_value'])) {
      $form['title']['#default_value'] = '我的简历';
    }

    drupal_add_css(path_to_theme() . '/layouts/intern_layout/intern_layout.css');
    drupal_add_js(path_to_theme() . '/js/maintain_resume.js');
    $form['actions']['submit']['#submit'][] = 'intern_user_resume_form_post_submit';
    $form['actions']['submit']['#value'] = '保存并预览';

//    print_r($form);
  }
}

function intern_user_resume_form_post_submit($form, &$form_state) {
  $nid = $form_state['nid'];
  $form_state['redirect'] = 'node/' . $nid . '/edit/preview';

  $_SESSION['user_resume_finish_percent'] = NULL;
  $_SESSION['user_resume_id'] = $nid;
}

/**
 * Implements hook_theme().
 */
function intern_user_theme() {
  return array(
    'intern_comment_user_picture' => array(
      'variables' => array('account' => NULL),
      'template' => 'intern-comment-user-picture',
    ),
  );
}

/**
 * Process variables for user-picture.tpl.php.
 *
 * The $variables array contains the following arguments:
 * - $account: A user, node or comment object with 'name', 'uid' and 'picture'
 *   fields.
 *
 * @see user-picture.tpl.php
 */
function template_preprocess_intern_comment_user_picture(&$variables) {
  $variables['user_picture'] = '';
  global $user;
  if (variable_get('user_pictures', 0)) {
    $account = $variables['account'];
    if (!empty($account->picture)) {
      // @TODO: Ideally this function would only be passed file objects, but
      // since there's a lot of legacy code that JOINs the {users} table to
      // {node} or {comments} and passes the results into this function if we
      // a numeric value in the picture field we'll assume it's a file id
      // and load it for them. Once we've got user_load_multiple() and
      // comment_load_multiple() functions the user module will be able to load
      // the picture files in mass during the object's load process.
      if (is_numeric($account->picture)) {
        $account->picture = file_load($account->picture);
      }
      if (!empty($account->picture->uri)) {
        $filepath = $account->picture->uri;
      }
    }
    elseif (variable_get('user_picture_default', '')) {
      $filepath = variable_get('user_picture_default', '');
    }
    if (isset($filepath)) {
      $alt = t("@user's picture", array('@user' => format_username($account)));
      // If the image does not have a valid Drupal scheme (for eg. HTTP),
      // don't load image styles.
      if (module_exists('image') && file_valid_uri($filepath) && $style = '40_40') {
        $variables['user_picture'] = theme('image_style', array(
          'style_name' => $style,
          'path' => $filepath,
          'alt' => $alt,
          'title' => $alt
        ));
      }
      else {
        $variables['user_picture'] = theme('image', array('path' => $filepath, 'alt' => $alt, 'title' => $alt));
      }
//      if (!empty($account->uid) && user_access('access user profiles') && ($user->uid==$account->uid)) {
//        $attributes = array('attributes' => array('title' => t('View user profile.')), 'html' => TRUE);
//        $variables['user_picture'] = l($variables['user_picture'], "user/$account->uid", $attributes);
//      }
    }
  }
}

function intern_user_user_login(&$edit, $account) {

  $query = db_select('node', 'n');
  $result = $query
    ->condition('n.type', 'resume')
    ->condition('n.uid', $account->uid)
    ->fields('n', array('nid'))
    ->range(0, 1)
    ->execute()
    ->fetchField();

  if (!empty($result)) {
    $_SESSION['user_resume_id'] = $result;
  }
  else {
    $_SESSION['user_resume_id'] = NULL;
  }
}

function intern_user_get_user_name($user_name) {
  $user_name_array = explode('^', $user_name);
  if (sizeof($user_name_array) == 2) {
    return $user_name_array[1];
  }
  else {
    return $user_name;
  }
}

function intern_user_get_user_full_name($user_name) {
  $user_name_array = explode('^', $user_name);
  if (sizeof($user_name_array) == 2) {
    return $user_name_array[0] . '[' . $user_name_array[1] . ']';
  }
  else {
    return $user_name;
  }
}


function intern_user_get_company_name() {
  global $user;
  $user_name = $user->username;
  $user_name_array = explode('^', $user_name);
  if (sizeof($user_name_array) == 2) {
    return $user_name_array[0];
  }
  else {
    return '';
  }
}
